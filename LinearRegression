import pandas as pd  
import matplotlib.pyplot as plt  
import seaborn as sns  
from sklearn.model_selection import train_test_split  
from sklearn.linear_model import LinearRegression  
from sklearn.metrics import mean_squared_error, r2_score,mean_absolute_error
data="C:/Users/priti/Downloads/archive (11)/Amazon 2_Raw.xlsx"
df=pd.read_excel(data)
df.head()
print(df.isnull().sum())  

 
df['Order Date'] = pd.to_datetime(df['Order Date'])  
df['Ship Date'] = pd.to_datetime(df['Ship Date']) 
 
X = df[['Sales', 'Quantity']]  
y = df['Profit']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()  

 
model.fit(X_train, y_train)  

 
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)  
r2 = r2_score(y_test, y_pred) 
mae = mean_absolute_error(y_test, y_pred)

print(f'Mean Squared Error: {mse}')  
print(f'R^2 Score: {r2}')  
print(f"Mean Absolute Error (MAE): {mae:.2f}")

# Plotting the predicted vs actual values  
plt.figure(figsize=(10, 6))  
plt.scatter(y_test, y_pred)  
plt.xlabel('Actual Profit')  
plt.ylabel('Predicted Profit')  
plt.title('Actual vs Predicted Profit')  
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=2)  
plt.show()
give the description for tbis code
