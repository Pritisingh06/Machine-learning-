import numpy as np
import pandas as pd
data="C:/Users/priti/Downloads/archive (8)/diabetes.csv"
df=pd.read_csv(data)
df.head(10)
df.info()
print(df.isnull().sum())
from sklearn.model_selection import train_test_split  
from sklearn.preprocessing import StandardScaler  
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier  
from sklearn.tree import DecisionTreeClassifier  
from sklearn.naive_bayes import GaussianNB  
from sklearn.svm import SVC  
from sklearn.metrics import classification_report, confusion_matrix
X = df.drop(columns=['Outcome'])  
y = df['Outcome']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  
scaler = StandardScaler()  
X_train = scaler.fit_transform(X_train)  
X_test = scaler.transform(X_test)
models = {  
    "Random Forest": RandomForestClassifier(n_estimators=100, random_state=42),  
    "Naive Bayes": GaussianNB(),  
    "Decision Tree": DecisionTreeClassifier(random_state=42),  
    "SVM": SVC(random_state=42),  
    "Gradient Boosting": GradientBoostingClassifier(n_estimators=100, random_state=42)  
}  
for model_name, model in models.items():  
    model.fit(X_train, y_train)  
    y_pred = model.predict(X_test)  

    print(f"\n{model_name} Results:")  
    print(confusion_matrix(y_test, y_pred))  
    print(classification_report(y_test, y_pred)) 
import matplotlib.pyplot as plt
ages = df['Age']  
glucose = df['Glucose']  
insulin = df['Insulin']  
bmi = df['BMI']  
outcome = df['Outcome']

plt.figure(figsize=(15, 10))  
 
plt.figure(figsize=(12, 6))  
plt.plot(ages, glucose, marker='o', linestyle='-', color='r', alpha=0.7)  
plt.title('Age vs. Glucose')  
plt.xlabel('Age')  
plt.ylabel('Glucose') 
plt.legend('Trends of age and glucose')
plt.grid()  
plt.show()  
